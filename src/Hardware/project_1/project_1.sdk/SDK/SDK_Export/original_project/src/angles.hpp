#ifndef ANGLES_H
#define ANGLES_H  true

#if !FPGA
#include <stdio.h>
//using namespace std;
#endif

#include <map>
#include <cstdint>

#define GRAIN 64

// Incase space is a premium, store 0 -> 90
// Cosine will just be cos(x) = sin(90 - x)

static std::map<int, int> sine = {
    { 0 , 0 },
    { 1 , 18  },
    { 2 , 36  },
    { 3 , 54  },
    { 4 , 71  },
    { 5 , 89  },
    { 6 , 107 },
    { 7 , 125 },
    { 8 , 143 },
    { 9 , 160 },
    { 10  , 178 },
    { 11  , 195 },
    { 12  , 213 },
    { 13  , 230 },
    { 14  , 248 },
    { 15  , 265 },
    { 16  , 282 },
    { 17  , 299 },
    { 18  , 316 },
    { 19  , 333 },
    { 20  , 350 },
    { 21  , 367 },
    { 22  , 384 },
    { 23  , 400 },
    { 24  , 416 },
    { 25  , 433 },
    { 26  , 449 },
    { 27  , 465 },
    { 28  , 481 },
    { 29  , 496 },
    { 30  , 512 },
    { 31  , 527 },
    { 32  , 543 },
    { 33  , 558 },
    { 34  , 573 },
    { 35  , 587 },
    { 36  , 602 },
    { 37  , 616 },
    { 38  , 630 },
    { 39  , 644 },
    { 40  , 658 },
    { 41  , 672 },
    { 42  , 685 },
    { 43  , 698 },
    { 44  , 711 },
    { 45  , 724 },
    { 46  , 737 },
    { 47  , 749 },
    { 48  , 761 },
    { 49  , 773 },
    { 50  , 784 },
    { 51  , 796 },
    { 52  , 807 },
    { 53  , 818 },
    { 54  , 828 },
    { 55  , 839 },
    { 56  , 849 },
    { 57  , 859 },
    { 58  , 868 },
    { 59  , 878 },
    { 60  , 887 },
    { 61  , 896 },
    { 62  , 904 },
    { 63  , 912 },
    { 64  , 920 },
    { 65  , 928 },
    { 66  , 935 },
    { 67  , 943 },
    { 68  , 949 },
    { 69  , 956 },
    { 70  , 962 },
    { 71  , 968 },
    { 72  , 974 },
    { 73  , 979 },
    { 74  , 984 },
    { 75  , 989 },
    { 76  , 994 },
    { 77  , 998 },
    { 78  , 1002  },
    { 79  , 1005  },
    { 80  , 1008  },
    { 81  , 1011  },
    { 82  , 1014  },
    { 83  , 1016  },
    { 84  , 1018  },
    { 85  , 1020  },
    { 86  , 1022  },
    { 87  , 1023  },
    { 88  , 1023  },
    { 89  , 1024  },
    { 90  , 1024  }
};

// mapping for arctan function
static std::map<int, int> angle_map = {
  { 0 , 0 },
  { 64  , 4 },
  { 128 , 7 },
  { 192 , 11  },
  { 256 , 14  },
  { 320 , 17  },
  { 384 , 21  },
  { 448 , 24  },
  { 512 , 27  },
  { 576 , 29  },
  { 640 , 32  },
  { 704 , 35  },
  { 768 , 37  },
  { 832 , 39  },
  { 896 , 41  },
  { 960 , 43  },
  { 1024  , 45  },
  { 1088  , 47  },
  { 1152  , 49  },
  { 1216  , 50  },
  { 1280  , 51  },
  { 1344  , 53  },
  { 1408  , 54  },
  { 1472  , 55  },
  { 1536  , 56  },
  { 1600  , 57  },
  { 1664  , 58  },
  { 1728  , 59  },
  { 1792  , 60  },
  { 1856  , 61  },
  { 1920  , 62  },  //note: skipped 1984, step of 128 now
  { 2048  , 63  },
  { 2176  , 65  },
  { 2304  , 66  },
  { 2432  , 67  },
  { 2560  , 68  },
  { 2688  , 69  },
  { 2816  , 70  },
  { 2944  , 71  },  // note:skipped 3072. Step = 256?
  { 3200  , 72  },
  { 3328  , 73  },
  { 3584  , 74  },
  { 3840  , 75  },
  { 4096  , 76  },
  { 4480  , 77  },
  { 4864  , 78  },
  { 5248  , 79  }, // started "hard coding"
  { 5888  , 80  },
  { 6400  , 81  },
  { 7296  , 82  },
  { 8320  , 83  },
  { 9728  , 84  },
  { 11776 , 85  },
  { 14720 , 86  },
  { 19584 , 87  },
  { 29440 , 88  },
  { 58752 , 89  } // bigger is 90
};

// Math Functions
unsigned long long int LongSqRt(unsigned long long int num);
int intSqRt(unsigned int num);
int Round64(int x);
int GetMagnitude(int x, int y);
int Abs(int num);

// Angle Functions
int Normalize(int degree);
int GetAngle(int y, int x);

// Trigonometric Functions
int Sin(int angle);
int Cos(int angle);
int ATan(int slope);
#endif
